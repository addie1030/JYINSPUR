<?xml version="1.0" encoding="utf-8"?>
<templates>

<div t-name="web_studio.Sidebar.Warning.Groups" class="o_web_studio_remove_warning_groups">
    <p><i class="fa fa-exclamation-triangle"/>
        This field is placed after another element that is only displayed under certain conditions.
    </p>
    You need to be part of these groups to see this field:<br/>
    <ul>
        <t t-foreach="widget.state.attrs['studio-view-group-names'].split(',')" t-as="group_name">
            <li><t t-esc="group_name"/></li>
        </t>
    </ul>
</div>

<t t-name="web_studio.Sidebar.Toolbox">
    <hr/>
    <div class="o_web_studio_sidebar_toolbox">
        <t t-raw="0"/>
    </div>
</t>

<div t-name="web_studio.ViewEditorSidebar" class="o_web_studio_sidebar">
    <!-- Header -->
    <div class="o_web_studio_sidebar_header">
        <div name="new" t-attf-class="o_web_studio_new #{_.contains(['form', 'list', 'kanban', 'search'], widget.view_type)  ? (widget.state.mode === 'new' ? 'active' : '') : 'inactive'}">
            <i class="fa fa-plus"/> Add
        </div>
        <div name="view" t-attf-class="o_web_studio_view #{widget.state.mode === 'view' ? 'active' : ''}">
            <i class="fa fa-television"/> View
        </div>
        <div name="properties" t-attf-class="disabled o_web_studio_properties #{widget.state.mode !== 'properties' ? 'inactive' : 'active'}">
            <i class="fa fa-server"/> Properties
        </div>
    </div>

    <!-- Content -->
    <div class="o_web_studio_sidebar_content o_display_view" t-if="!(widget.mode === 'properties')">
        <t t-if="widget.state.mode === 'view'">
            <div t-if="_.contains(['list', 'form', 'kanban'], widget.view_type)" class="o_web_studio_sidebar_checkbox">
                <div class="custom-control custom-checkbox">
                    <input type="checkbox" id="create" name="create" class="custom-control-input"
                        t-att-checked="widget.isTrue(widget.state.attrs.create) ? 'checked' : undefined"/>
                    <label for="create" class="custom-control-label">Can Create</label>
                </div>
            </div>
            <div t-if="_.contains(['list', 'form'], widget.view_type)" class="o_web_studio_sidebar_checkbox">
                <div class="custom-control custom-checkbox">
                    <input type="checkbox" id="edit" name="edit" class="custom-control-input"
                        t-att-checked="widget.isTrue(widget.state.attrs.edit) ? 'checked' : undefined"/>
                    <label for="edit" class="custom-control-label">Can Edit</label>
                </div>
            </div>
            <div t-if="_.contains(['list', 'form'], widget.view_type)" class="o_web_studio_sidebar_checkbox">
                <div class="custom-control custom-checkbox">
                    <input type="checkbox" id="delete" name="delete" class="custom-control-input"
                        t-att-checked="widget.isTrue(widget.state.attrs.delete) ? 'checked' : undefined"/>
                    <label for="delete" class="custom-control-label">Can Delete</label>
                </div>
            </div>
            <t t-if="_.contains(['list', 'form'], widget.view_type)">
                <div class="o_web_studio_sidebar_separator"/>
                <div class="o_web_studio_sidebar_checkbox">
                    <div class="custom-control custom-checkbox">
                        <input type="checkbox" id="show_invisible" class="custom-control-input"
                            t-att-checked="widget.state.show_invisible ? 'checked' : undefined"/>
                        <label for="show_invisible" class="custom-control-label">Show invisible elements</label>
                    </div>
                </div>
            </t>
            <t t-if="widget.view_type === 'list'">
                <div class="o_web_studio_sidebar_select">
                    <label for="editable">Editable</label>
                    <select id="editable" name="editable">
                        <option></option>
                        <option t-att-selected="widget.state.attrs.editable === 'top' ? 'selected' : undefined" value="top">top</option>
                        <option t-att-selected="widget.state.attrs.editable === 'bottom' ? 'selected' : undefined" value="bottom">bottom</option>
                    </select>
                </div>
            </t>
            <!-- Kanban view settings -->
            <t t-if="widget.view_type === 'kanban'">
                <div class="o_web_studio_sidebar_checkbox">
                    <div class="custom-control custom-checkbox">
                        <input type="checkbox" id="quick_create" name="quick_create" class="custom-control-input" data-leave-empty='checked'
                            t-att-checked="widget.state.attrs.quick_create ? undefined : 'checked'"/>
                        <label for="quick_create" class="custom-control-label">Quick Create</label>
                    </div>
                </div>
                <div class="o_web_studio_sidebar_checkbox">
                    <div class="custom-control custom-checkbox">
                        <input type="checkbox" id="enable_stage" name="enable_stage" class="custom-control-input" data-leave-empty='checked'
                            t-att-checked="widget.state.attrs.default_group_by ? 'checked' : undefined"/>
                        <label for="enable_stage" class="custom-control-label">Enable Stages</label>
                    </div>
                </div>
                <div class="o_web_studio_sidebar_select">
                    <label for="default_group_by">Default Group by</label>
                    <select id="default_group_by" name="default_group_by">
                        <option t-att-selected="widget.state.attrs.default_group_by ? undefined : 'selected'"></option>
                        <option t-foreach="widget.orderered_fields" t-as="field" t-if="field.store and _.contains(widget.GROUPABLE_TYPES, field.type)" t-att-selected="widget.state.attrs.default_group_by ===  field.name ? 'selected' : undefined" t-att-value="field.name">
                            <t t-esc="field.string"/> <span t-if="widget.debug">(<t t-esc="field.name"/>)</span>
                        </option>
                    </select>
                </div>
            </t>
            <!-- Calendar view settings -->
            <t t-if="widget.view_type === 'calendar'">
                <div class="o_web_studio_sidebar_checkbox">
                    <div class="custom-control custom-checkbox">
                        <input type="checkbox" id="quick_add" name="quick_add" class="custom-control-input" data-leave-empty='checked'
                            t-att-checked="widget.isTrue(widget.state.attrs.quick_add) ? 'checked' : undefined"/>
                        <label for="quick_add" class="custom-control-label">Quick Create</label>
                    </div>
                </div>
                <div class="o_web_studio_sidebar_select">
                    <label for="date_start">Start Date Field</label>
                    <select id="date_start" name="date_start">
                        <option t-foreach="widget.orderered_fields" t-as="field" t-if="field.store and _.contains(['date', 'datetime'], field.type)" t-att-selected="widget.state.attrs.date_start ===  field.name ? 'selected' : undefined" t-att-value="field.name">
                            <t t-esc="field.string"/> <span t-if="widget.debug">(<t t-esc="field.name"/>)</span>
                        </option>
                    </select>
                </div>
                <div class="o_web_studio_sidebar_select">
                    <label for="date_stop">Stop Date Field</label>
                    <select id="date_stop" name="date_stop">
                        <option t-att-selected="widget.state.attrs.date_stop ? undefined : 'selected'"></option>
                        <option t-foreach="widget.orderered_fields" t-as="field" t-if="field.store and _.contains(['date', 'datetime'], field.type)" t-att-selected="widget.state.attrs.date_stop ===  field.name ? 'selected' : undefined" t-att-value="field.name">
                            <t t-esc="field.string"/> <span t-if="widget.debug">(<t t-esc="field.name"/>)</span>
                        </option>
                    </select>
                </div>
                <div class="o_web_studio_sidebar_select">
                    <label for="date_delay">Delay Field</label>
                    <select id="date_delay" name="date_delay">
                        <option t-att-selected="widget.state.attrs.date_delay ? undefined : 'selected'"></option>
                        <option t-foreach="widget.orderered_fields" t-as="field" t-if="_.contains(['float', 'integer'], field.type)" t-att-selected="widget.state.attrs.date_delay ===  field.name ? 'selected' : undefined" t-att-value="field.name">
                            <t t-esc="field.string"/> <span t-if="widget.debug">(<t t-esc="field.name"/>)</span>
                        </option>
                    </select>
                </div>
                <div class="o_web_studio_sidebar_select">
                    <label for="color">Color</label>
                    <select id="color" name="color">
                        <option t-att-selected="widget.state.attrs.color ? undefined : 'selected'"></option>
                        <option t-foreach="widget.orderered_fields" t-as="field" t-if="_.contains(['many2one', 'selection'], field.type)" t-att-selected="widget.state.attrs.color ===  field.name ? 'selected' : undefined" t-att-value="field.name">
                            <t t-esc="field.string"/> <span t-if="widget.debug">(<t t-esc="field.name"/>)</span>
                        </option>
                    </select>
                </div>
                <div class="o_web_studio_sidebar_select">
                    <label for="all_day">All Day</label>
                    <select id="all_day" name="all_day">
                        <option t-att-selected="widget.state.attrs.all_day ? undefined : 'selected'"></option>
                        <!-- all_day needs to be a boolean field -->
                        <option t-foreach="widget.orderered_fields" t-as="field" t-if="field.type === 'boolean'" t-att-selected="widget.state.attrs.all_day ===  field.name ? 'selected' : undefined" t-att-value="field.name">
                            <t t-esc="field.string"/> <span t-if="widget.debug">(<t t-esc="field.name"/>)</span>
                        </option>
                    </select>
                </div>
                <div class="o_web_studio_sidebar_select">
                    <label for="mode">Default Display Mode</label>
                    <select id="mode" name="mode">
                        <option></option>
                        <option t-att-selected="widget.state.attrs.mode === 'day' ? 'selected' : undefined" value="day">day</option>
                        <option t-att-selected="widget.state.attrs.mode === 'week' ? 'selected' : undefined" value="week">week</option>
                        <option t-att-selected="widget.state.attrs.mode === 'month' ? 'selected' : undefined" value="month">month</option>
                    </select>
                </div>
            </t>
            <!-- Gantt view settings -->
            <t t-if="widget.view_type === 'gantt'">
                <div class="o_web_studio_sidebar_select">
                    <label for="date_start">Start Date Field</label>
                    <select id="date_start" name="date_start">
                        <option t-foreach="widget.orderered_fields" t-as="field" t-if="field.store and _.contains(['date', 'datetime'], field.type)" t-att-selected="widget.state.attrs.date_start ===  field.name ? 'selected' : undefined" t-att-value="field.name">
                            <t t-esc="field.string"/> <span t-if="widget.debug">(<t t-esc="field.name"/>)</span>
                        </option>
                    </select>
                </div>
                <div class="o_web_studio_sidebar_select">
                    <label for="date_stop">Stop Date Field</label>
                    <select id="date_stop" name="date_stop">
                        <option t-att-selected="widget.state.attrs.date_stop ? undefined : 'selected'"></option>
                        <option t-foreach="widget.orderered_fields" t-as="field" t-if="field.store and _.contains(['date', 'datetime'], field.type)" t-att-selected="widget.state.attrs.date_stop ===  field.name ? 'selected' : undefined" t-att-value="field.name">
                            <t t-esc="field.string"/> <span t-if="widget.debug">(<t t-esc="field.name"/>)</span>
                        </option>
                    </select>
                </div>
                <div class="o_web_studio_sidebar_select">
                    <label for="date_delay">Delay Field</label>
                    <select id="date_delay" name="date_delay">
                        <option t-att-selected="widget.state.attrs.date_delay ? undefined : 'selected'"></option>
                        <option t-foreach="widget.orderered_fields" t-as="field" t-if="_.contains(['float', 'integer'], field.type)" t-att-selected="widget.state.attrs.date_delay ===  field.name ? 'selected' : undefined" t-att-value="field.name">
                            <t t-esc="field.string"/> <span t-if="widget.debug">(<t t-esc="field.name"/>)</span>
                        </option>
                    </select>
                </div>
                <div class="o_web_studio_sidebar_select">
                    <label for="duration_unit">Duration Unit</label>
                    <select id="duration_unit" name="duration_unit">
                        <option></option>
                        <option t-att-selected="widget.state.attrs.duration_unit === 'minute' ? 'selected' : undefined" value="minute">Minute</option>
                        <option t-att-selected="widget.state.attrs.duration_unit === 'hour' ? 'selected' : undefined" value="hour">Hour</option>
                        <option t-att-selected="widget.state.attrs.duration_unit === 'day' ? 'selected' : undefined" value="day">Day</option>
                        <option t-att-selected="widget.state.attrs.duration_unit === 'week' ? 'selected' : undefined" value="week">Week</option>
                        <option t-att-selected="widget.state.attrs.duration_unit === 'month' ? 'selected' : undefined" value="month">Month</option>
                        <option t-att-selected="widget.state.attrs.duration_unit === 'year' ? 'selected' : undefined" value="year">Year</option>
                    </select>
                </div>
                <div class="o_web_studio_sidebar_select">
                    <label for="default_group_by">Default Group by</label>
                    <select id="default_group_by" name="default_group_by">
                        <option t-att-selected="widget.state.attrs.default_group_by ? undefined : 'selected'"></option>
                        <option t-foreach="widget.orderered_fields" t-as="field" t-if="field.store and _.contains(widget.GROUPABLE_TYPES, field.type)" t-att-selected="widget.state.attrs.default_group_by ===  field.name ? 'selected' : undefined" t-att-value="field.name">
                            <t t-esc="field.string"/> <span t-if="widget.debug">(<t t-esc="field.name"/>)</span>
                        </option>
                    </select>
                </div>
                <div class="o_web_studio_sidebar_select">
                    <label for="type">Type</label>
                    <select id="type" name="type">
                        <option></option>
                        <option t-att-selected="widget.state.attrs.type === 'gantt' ? 'selected' : undefined" value="gantt">Gantt</option>
                        <option t-att-selected="widget.state.attrs.type === 'consolidate' ? 'selected' : undefined" value="consolidate">Consolidate</option>
                        <option t-att-selected="widget.state.attrs.type === 'planning' ? 'selected' : undefined" value="planning">Planning</option>
                    </select>
                </div>
            </t>

            <!-- Cohort view settings -->
            <t t-if="widget.view_type === 'cohort'">
                <div class="o_web_studio_sidebar_select">
                    <label for="date_start">Start Date Field</label>
                    <select id="date_start" name="date_start">
                        <option t-foreach="widget.orderered_fields" t-as="field" t-if="field.store and _.contains(['date', 'datetime'], field.type)" t-att-selected="widget.state.attrs.date_start ===  field.name ? 'selected' : undefined" t-att-value="field.name">
                            <t t-esc="field.string" /> <span t-if="widget.debug">(<t t-esc="field.name"/>)</span>
                        </option>
                    </select>
                </div>
                <div class="o_web_studio_sidebar_select">
                    <label for="date_stop">Stop Date Field</label>
                    <select id="date_stop" name="date_stop">
                        <option t-foreach="widget.orderered_fields" t-as="field" t-if="field.store and _.contains(['date', 'datetime'], field.type)" t-att-selected="widget.state.attrs.date_stop ===  field.name ? 'selected' : undefined" t-att-value="field.name">
                            <t t-esc="field.string" /> <span t-if="widget.debug">(<t t-esc="field.name"/>)</span>
                        </option>
                    </select>
                </div>
                <div class="o_web_studio_sidebar_select">
                    <label for="measure">Measure Field</label>
                    <select id="measure" name="measure">
                        <option></option>
                        <option t-foreach="widget.orderered_fields" t-as="field" t-if="field.name !== 'id' and field.store and _.contains(['integer', 'float', 'monetary'], field.type)" t-att-selected="widget.state.attrs.measure ===  field.name ? 'selected' : undefined" t-att-value="field.name">
                            <t t-esc="field.string" /> <span t-if="widget.debug">(<t t-esc="field.name"/>)</span>
                        </option>
                    </select>
                </div>
                <div class="o_web_studio_sidebar_select">
                    <label for="interval">Interval</label>
                    <select id="interval" name="interval">
                        <option t-att-selected="widget.state.attrs.interval === 'day' ? 'selected' : undefined" value="day">Day</option>
                        <option t-att-selected="widget.state.attrs.interval === 'week' ? 'selected' : undefined" value="week">Week</option>
                        <option t-att-selected="widget.state.attrs.interval === 'month' ? 'selected' : undefined" value="month">Month</option>
                        <option t-att-selected="widget.state.attrs.interval === 'year' ? 'selected' : undefined" value="year">Year</option>
                    </select>
                </div>
                <div class="o_web_studio_sidebar_select">
                    <label for="mode">Mode</label>
                    <select id="mode" name="mode">
                        <option t-att-selected="(widget.state.attrs.mode === 'retention' || !widget.state.attrs.mode) ? 'selected' : undefined" value="retention">Retention</option>
                        <option t-att-selected="widget.state.attrs.mode === 'churn' ? 'selected' : undefined" value="churn">Churn</option>
                    </select>
                </div>
                <div class="o_web_studio_sidebar_select">
                    <label for="timeline">Timeline</label>
                    <select id="timeline" name="timeline">
                        <option t-att-selected="(widget.state.attrs.timeline === 'forward' || !widget.state.attrs.timeline) ? 'selected' : undefined" value="forward">Forward</option>
                        <option t-att-selected="widget.state.attrs.timeline === 'backward' ? 'selected' : undefined" value="backward">Backward</option>
                    </select>
                </div>
            </t>

            <!-- Pivot view settings -->
            <t t-if="widget.view_type === 'pivot'">

                <div class="o_web_studio_sidebar_checkbox">
                    <div class="custom-control custom-checkbox">
                        <!-- Disable linking is presented as a positive sentence for easier understanding (hence inverse) -->
                        <input type="checkbox" id="disable_linking" name="disable_linking" class="custom-control-input" data-inverse="1" data-leave-empty='unchecked'
                            t-att-checked="widget.state.attrs.disable_linking ? undefined : 'checked'"/>
                        <label for="disable_linking" class="custom-control-label">Allow Link to List View</label>
                    </div>
                </div>
                <div class="o_web_studio_sidebar_checkbox">
                    <div class="custom-control custom-checkbox">
                        <input type="checkbox" id="display_quantity" name="display_quantity" class="custom-control-input" data-leave-empty='unchecked'
                            t-att-checked="widget.state.attrs.display_quantity ? 'checked' : undefined"/>
                        <label for="display_quantity" class="custom-control-label">Display Count</label>
                    </div>
                </div>
            </t>
            <t t-call="web_studio.Sidebar.Toolbox" t-if="widget.debug">
                <t t-call="web_studio.Sidebar.Parameters"/>
                <t t-if="!widget.isEditingX2m">
                    <t t-call="web_studio.Sidebar.XMLEditor"/>
                </t>

                <t t-if="_.contains(['list', 'form'], widget.view_type)">
                    <button class="btn btn-secondary o_web_studio_defaults">Default Values</button>
                </t>
            </t>
        </t>
    </div>
    <t t-if="widget.state.mode === 'properties'">
        <div t-if="widget.state.node.tag === 'field'" class="o_web_studio_sidebar_content o_display_field">
            <t t-if="widget.view_type == 'search'">
                <t t-call="web_studio.ViewEditorSidebar.autocompletion_field"/>
            </t>
            <t t-else="1">
                <t t-call="web_studio.ViewEditorSidebar.field"/>
            </t>
        </div>
        <div t-if="widget.state.node.tag === 'page'" class="o_web_studio_sidebar_content o_display_page">
            <t t-call="web_studio.ViewEditorSidebar.page"/>
        </div>
        <div t-if="widget.state.node.tag === 'label'" class="o_web_studio_sidebar_content o_display_label">
            <t t-call="web_studio.ViewEditorSidebar.label"/>
        </div>
        <div t-if="widget.state.node.tag === 'group'" class="o_web_studio_sidebar_content o_display_group">
            <t t-call="web_studio.ViewEditorSidebar.group"/>
        </div>
        <t t-if="widget.state.node.tag === 'div'">
            <div t-if="widget.state.node.attrs.class === 'oe_chatter'" class="o_web_studio_sidebar_content o_display_chatter">
                <t t-call="web_studio.ViewEditorSidebar.chatter"/>
            </div>
            <div t-else="" class="o_web_studio_sidebar_content o_display_div">
                <t t-call="web_studio.ViewEditorSidebar.div"/>
            </div>
        </t>
        <div t-if="widget.state.node.tag === 'button'" class="o_web_studio_sidebar_content o_display_button">
            <t t-call="web_studio.ViewEditorSidebar.button"/>
        </div>
        <div t-if="widget.state.node.tag ==='filter'" class="o_web_studio_sidebar_content o_display_filter">
            <t t-if="widget.state.attrs.is_group_by === true">
                <t t-call="web_studio.ViewEditorSidebar.group_by"/>
            </t>
            <t t-else="1">
                <t t-call="web_studio.ViewEditorSidebar.filter"/>
            </t>
        </div>
        <div t-if="widget.state.node.tag ==='separator'" class="o_web_studio_sidebar_content o_display_filter_separator">
            <t t-call="web_studio.Sidebar.Toolbox">
                <t t-call="web_studio.Sidebar.Remove"/>
            </t>
        </div>
    </t>
</div>

<!-- FieldEditor -->
<t t-name="web_studio.ViewEditorSidebar.field">
    <div class="clearfix o_web_studio_sidebar_checkbox">
        <t t-set="attrs_invisible" t-value="widget.state.modifiers.invisible and widget.state.modifiers.invisible !== true"/>
        <div t-attf-class="custom-control custom-checkbox#{attrs_invisible ? ' o_web_studio_checkbox_inactive' : ''}">
            <input type="checkbox" id="invisible" name="invisible" class="custom-control-input" data-type="attributes"
                t-att-checked="widget.state.attrs.invisible ? 'checked' : undefined"/>
            <label for="invisible" class="custom-control-label">Invisible</label>
            <a role="button" href="#" data-type="invisible" class="btn btn-link o_web_studio_attrs">Conditional</a>
        </div>
    </div>
    <t t-if="widget.state.modifiers.invisible !== true">
        <t t-if="_.contains(['list', 'form'], widget.view_type)">
            <div class="clearfix o_web_studio_sidebar_checkbox">
                <t t-set="attrs_required" t-value="widget.state.modifiers.required and widget.state.modifiers.required !== true"/>
                <div t-attf-class="custom-control custom-checkbox#{attrs_required ? ' o_web_studio_checkbox_inactive' : ''}">
                    <input type="checkbox" id="required" name="required" class="custom-control-input" data-type="attributes"
                        t-att-checked="widget.state.attrs.required ? 'checked' : undefined"
                        t-att-disabled="widget.state.field.required ? 'disabled' : undefined"/>
                    <label for="required" class="custom-control-label">Required</label>
                    <a role="button" href="#" data-type="required" class="btn btn-link o_web_studio_attrs">Conditional</a>
                </div>
            </div>
            <div class="clearfix o_web_studio_sidebar_checkbox">
                <t t-set="attrs_readonly" t-value="widget.state.modifiers.readonly and widget.state.modifiers.readonly !== true"/>
                <div t-attf-class="custom-control custom-checkbox#{attrs_readonly ? ' o_web_studio_checkbox_inactive' : ''}">
                    <input type="checkbox" id="readonly" name="readonly" class="custom-control-input" data-type="attributes"
                        t-att-checked="widget.state.attrs.readonly ? 'checked' : undefined"/>
                    <label for="readonly" class="custom-control-label">Read only</label>
                    <a role="button" href="#" data-type="readonly" class="btn btn-link o_web_studio_attrs">Conditional</a>
                </div>
            </div>
        </t>
        <div t-if="widget.view_type === 'kanban'" class="o_web_studio_sidebar_checkbox">
            <div class="custom-control custom-checkbox">
                <input type="checkbox" id="bold" name="bold" class="custom-control-input" data-type="attributes"
                    data-leave-empty="unchecked" t-att-checked="widget.state.attrs.bold ? 'checked' : undefined"/>
                <label for="bold" class="custom-control-label">Bold</label>
            </div>
        </div>
        <div t-if="widget.view_type === 'kanban'" class="o_web_studio_sidebar_select">
            <label for="display">Display</label>
            <select id="display" name="display">
                <option t-att-selected="!widget.state.attrs.display ? 'selected' : undefined" value="false">Default</option>
                <option t-att-selected="widget.state.attrs.display === 'right' ? 'selected' : undefined" value="right">Pull Right</option>
                <option t-att-selected="widget.state.attrs.display === 'full' ? 'selected' : undefined" value="full">Full Width</option>
            </select>
        </div>
        <div class="o_web_studio_sidebar_text">
            <label for="string">Label</label>
            <input id="string" name="string" type="text" data-type="attributes"
                t-att-value="widget.state.attrs.string"/>
        </div>
        <div t-if="widget.view_type === 'form'" class="o_web_studio_sidebar_text">
            <label for="help">Help Tooltip</label>
            <input id="help" name="help" type="text" data-type="attributes"
                t-att-value="widget.state.attrs.help"/>
        </div>
        <t t-if="widget.state.attrs.related">
            <div class="o_web_studio_sidebar_text">
                <label for="related">Related Field</label>
                <input id="related" name="related" type="text" readonly="readonly"
                    t-att-value="widget.state.attrs.related"/>
            </div>
        </t>
        <div t-if="(widget.view_type === 'form' or (widget.view_type === 'list' and widget.state.attrs.editable))
            and widget.has_placeholder" class="o_web_studio_sidebar_text">
            <label for="placeholder">Placeholder</label>
            <input id="placeholder" name="placeholder" type="text" placeholder="Placeholder Text" data-type="attributes"
                t-att-value="widget.state.attrs.placeholder"/>
        </div>
        <div class="o_web_studio_sidebar_text" t-if="widget.debug">
            <label for="name">Technical Name</label>
            <div class="input-group">
                <div class="input-group-prepend">
                    <span class="input-group-text" t-if="widget.isRenamingAllowed(widget.state.attrs.name)">x_studio_</span>
                </div>
                <input t-if="widget.isRenamingAllowed(widget.state.attrs.name)" id="id" name="name" type="text" data-type="field_name" t-att-value="widget.state.attrs.name.replace('x_studio_', '')"/>
                <span t-else="1"><t t-esc="widget.state.attrs.name"/></span>
            </div>
        </div>
        <div t-if="_.contains(['list', 'form', 'kanban'], widget.view_type) and (widget.debug or widget.state.attrs.widget !== 'statusbar')" class="o_web_studio_sidebar_select">
            <label for="widget">Widget</label>
            <select id="widget" name="widget">
                <option t-att-selected="widget.state.attrs.widget ? undefined : 'selected'"></option>
                <option t-foreach="widget.state.field.field_widgets" t-as="w" t-att-selected="widget.state.attrs.widget ===  w ? 'selected' : undefined">
                    <t t-esc="w"/>
                </option>
            </select>
        </div>
        <div t-if="widget.view_type === 'form' and widget.state.attrs.widget === 'image'" class="o_web_studio_sidebar_text">
            <label for="img_size">Image Size</label>
            <t t-set="img_size_value" t-value="widget.state.attrs.options.size ? widget.state.attrs.options.size[0] : 90"/>
            <select id="img_size" name="img_size">
                <option t-att-selected="img_size_value === 90 ? 'selected' : undefined" value="90">Small</option>
                <option t-att-selected="img_size_value === 180 ? 'selected' : undefined" value="180">Medium</option>
                <option t-att-selected="img_size_value === 270 ? 'selected' : undefined" value="270">Large</option>
            </select>
        </div>
        <div t-if="!_.contains(widget.NON_DEFAULT_TYPES, widget.state.field.type)"
            t-att-class="widget.state.field.type === 'selection' ? 'o_web_studio_sidebar_select' : 'o_web_studio_sidebar_text'">
            <label for="default_value">Default value</label>
            <t t-if="widget.state.field.type === 'selection'">
                <select id="default_value" name="default_value" data-type="default_value">
                    <option t-att-selected="widget.state.default_value ? undefined : 'selected'"></option>
                    <option t-foreach="widget.state.field.selection" t-as="item"
                        t-att-value="item[0]"
                        t-att-selected="widget.state.default_value ===  item[0] ? 'selected' : undefined">
                        <t t-esc="item[1]"/>
                    </option>
                </select>
            </t>
            <t t-else="">
                <input id="default_value" type="text" data-type="default_value"
                    t-att-value="widget.state.default_value"/>
            </t>
        </div>
        <t t-if="_.contains(['many2many', 'many2one', 'one2many'], widget.state.field.type)">
            <div class="o_web_studio_sidebar_text o_web_studio_sidebar_iscode">
                <label for="domain">Domain</label>
                <input id="domain" name="domain" type="text" data-type="attributes"
                    t-att-value="widget.domainToStr(widget.state.attrs.domain)"/>
            </div>
            <div class="o_web_studio_sidebar_text o_web_studio_sidebar_iscode">
                <label for="context">Context</label>
                <input id="context" name="context" type="text" data-type="attributes"
                    t-att-value="JSON.stringify(widget.state.attrs.context)"/>
            </div>
        </t>
    </t>
    <div class="o_web_studio_sidebar_tags">
        <label for="groups">Limit visibility to groups</label>
        <div class="o_groups"/>
    </div>
    <div t-if="widget.state.field.manual and widget.state.field.type === 'selection'">
        <a href="#" role="button" class="btn btn-link o_web_studio_edit_selection_values"><i class="fa fa-pencil"/> Edit Possible Values</a>
    </div>
    <t t-call="web_studio.Sidebar.Toolbox">
        <t t-call="web_studio.Sidebar.Parameters"/>
        <t t-call="web_studio.Sidebar.Remove"/>
    <t t-if="widget.state.attrs['studio-view-group-names']">
        <hr/>
        <t t-call="web_studio.Sidebar.Warning.Groups"/>
    </t>
    </t>
</t>

<!-- FieldEditor for the SearchView-->
<t t-name="web_studio.ViewEditorSidebar.autocompletion_field">
    <div>
        <label for="string">Label</label>
        <input id="string" name="string" type="text" data-type="attributes"
            t-att-value="widget.state.attrs.string"/>
    </div>
    <t t-call="web_studio.Sidebar.Remove"/>
</t>

<!-- PageEditor -->
<t t-name="web_studio.ViewEditorSidebar.page">
    <div class="o_web_studio_sidebar_text">
        <label for="string">Label</label>
        <input id="string" name="string" type="text"
            t-att-value="widget.state.attrs.string"/>
    </div>
    <t t-call="web_studio.Sidebar.Toolbox">
        <t t-call="web_studio.Sidebar.Remove"/>
    <t t-if="widget.state.attrs['studio-view-group-names']">
        <hr/>
        <t t-call="web_studio.Sidebar.Warning.Groups"/>
    </t>
    </t>
</t>

<!-- GroupEditor -->
<t t-name="web_studio.ViewEditorSidebar.group">
    <div class="o_web_studio_sidebar_text">
        <label for="string">Label Text</label>
        <input id="string" name="string" type="text"
            t-att-value="widget.state.attrs.string"/>
    </div>
    <t t-call="web_studio.Sidebar.Toolbox">
        <t t-call="web_studio.Sidebar.Remove"/>
    <t t-if="widget.state.attrs['studio-view-group-names']">
        <hr/>
        <t t-call="web_studio.Sidebar.Warning.Groups"/>
    </t>
    </t>
</t>

<!-- FilterEditor -->
<t t-name="web_studio.ViewEditorSidebar.filter">
    <div class="o_web_studio_sidebar_text">
        <label for="string">Label Text</label>
        <input id="string" name="string" type="text"
            t-att-value="widget.state.attrs.string"/>
        <label for="domain">Filter Domain</label>
        <input id="domain" name="domain" type="text"
            t-att-value="widget.state.attrs.domain" readonly="readonly"/>
    </div>
    <t t-call="web_studio.Sidebar.Toolbox">
        <t t-call="web_studio.Sidebar.Remove"/>
    </t>
</t>

<!-- ChatterEditor -->
<t t-name="web_studio.ViewEditorSidebar.chatter">
    <div class="o_web_studio_sidebar_text">
        <label for="email_alias">Email Alias</label>
        <div class="input-group">
            <input id="email_alias" name="email_alias" type="text" data-type="email_alias"
                t-att-value="widget.state.email_alias"/>
            <div class="input-group-append">
                <div class="input-group-text">@<t t-if="widget.state.alias_domain" t-esc="widget.state.alias_domain"/></div>
            </div>
        </div>
        <div t-if="widget.state.email_alias and widget.state.alias_domain" class="mt8">
            Send a <a t-att-href="'mailto:' + widget.state.email_alias + '@' + widget.state.alias_domain + '?subject=test'">test email</a>.
        </div>
    </div>
    <t t-call="web_studio.Sidebar.Toolbox">
        <t t-call="web_studio.Sidebar.Remove"/>
    </t>
</t>

<!-- ButtonEditor -->
<t t-name="web_studio.ViewEditorSidebar.button">
    <div t-if="widget.is_stat_btn" class="o_web_studio_sidebar_text o_web_studio_sidebar_iscode">
        <label>Icon</label>
        <input name="icon" type="text"
            t-att-value="widget.state.attrs.icon"/>
    </div>
    <t t-else="">
        <h3>Rainbow Man</h3>
        <t t-set="rainbow" t-value="widget.state.attrs.effect"/>
        <div class="o_web_studio_sidebar_checkbox">
            <div class="custom-control custom-checkbox">
                <input type="checkbox" id="rainbow" name="rainbow" class="custom-control-input" t-att-checked="rainbow ? 'checked' : undefined"/>
                <label for="rainbow" class="custom-control-label">Rainbow Effect</label>
            </div>
        </div>
        <t t-if="rainbow">
            <div class="o_web_studio_sidebar_text">
                <label for="rainbow_message">Message</label>
                <input id="rainbow_message" name="rainbow_message" type="text" t-att-value="rainbow.message or 'Well Done!'"/>
            </div>
            <div class="o_web_studio_sidebar_select">
                <label for="rainbow_fadeout">Fadeout Speed</label>
                <select id="rainbow_fadeout" name="rainbow_fadeout">
                    <option t-att-selected="rainbow.fadeout === 'fast' ? 'selected' : undefined" value="fast">Fast</option>
                    <option t-att-selected="rainbow.fadeout === 'medium' ? 'selected' : undefined" value="medium">Medium</option>
                    <option t-att-selected="rainbow.fadeout === 'slow' ? 'selected' : undefined" value="slow">Slow</option>
                    <option t-att-selected="rainbow.fadeout === 'no' ? 'selected' : undefined" value="no">No</option>
                </select>
            </div>
            <div>
                <input id="rainbow_img_url" name="rainbow_img_url" type="hidden" t-att-value="rainbow.img_url"/>
                <div class="mb8 ml64 mr64">
                    <img t-att-src="rainbow.img_url or '/web/static/src/img/smile.svg'" class="img img-fluid" alt="Great !"/>
                </div>
            </div>
            <div class="text-center">
                <button class="btn btn-secondary o_img_upload"><i class="fa fa-upload"/> Change Image</button>
                <button t-if="rainbow.img_url" class="btn btn-secondary o_img_reset"><i class="fa fa-undo"/>Reset Image</button>
            </div>
            <span class="d-none">
                <t t-call="HiddenInputFile">
                    <t t-set="fileupload_id" t-value="widget.fileupload_id"/>
                    <t t-set="fileupload_action" t-translation="off">/web/binary/upload_attachment</t>
                    <input type="hidden" name="model" value="res.users"/>
                    <input type="hidden" name="id" t-att-value="widget.user_id"/>
                </t>
            </span>
        </t>

    </t>
    <t t-call="web_studio.Sidebar.Toolbox">
        <t t-call="web_studio.Sidebar.Remove"/>
    </t>
</t>

<!-- LabelEditor -->
<t t-name="web_studio.ViewEditorSidebar.label">
    <div class="o_web_studio_sidebar_text">
        <label for="string">Label</label>
        <input id="string" name="string" type="text"
            t-att-value="widget.state.attrs.string"/>
    </div>
    <t t-call="web_studio.Sidebar.Toolbox">
        <t t-call="web_studio.Sidebar.Remove"/>
    </t>
</t>

<!-- DivEditor -->
<t t-name="web_studio.ViewEditorSidebar.div">
    <t t-call="web_studio.Sidebar.Toolbox">
        <t t-call="web_studio.Sidebar.Remove"/>
    </t>
</t>

<!-- SearchViewFilterEditor -->
<t t-name="web_studio.ViewEditorSidebar.group_by">
    <div class="o_web_studio_sidebar_text">
        <label for="string">Label</label>
        <input id="string" name="string" type="text" data-type="attributes"
            t-att-value="widget.state.attrs.string"/>
    </div>
    <t t-call="web_studio.Sidebar.Remove"/>
</t>

</templates>
