<templateSet group="Odoo Python">
  <template name="#!" value="#!/usr/bin/env python" description="" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
  <template name="imp" value="import $module$$END$" description="" toReformat="true" toShortenFQNames="true">
    <variable name="module" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
  <template name="coding" value="# -*- coding: $coding$ -*-&#10;$END$" description="" toReformat="true" toShortenFQNames="true">
    <variable name="coding" expression="" defaultValue="utf-8" alwaysStopAt="true" />
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
  <template name="from" value="from $module$ import $class$$END$" description="" toReformat="true" toShortenFQNames="true">
    <variable name="module" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="class" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
  <template name="docs" value="'''&#10;File: $filename$.py&#10;Author: $author$&#10;Description: $description$&#10;'''&#10;$END$" description="" toReformat="true" toShortenFQNames="true">
    <variable name="filename" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="author" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="description" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
  <template name="wh" value="while $condition$:&#10;    $code$&#10;$END$" description="" toReformat="true" toShortenFQNames="true">
    <variable name="code" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="condition" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
  <template name="for" value="for $needle$ in $haystack$:&#10;    $code$&#10;$END$" description="" toReformat="true" toShortenFQNames="true">
    <variable name="needle" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="haystack" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="code" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
  <template name="cl" value="class $ClassName$($Object$):&#10;    &quot;&quot;&quot;$Docstring$&quot;&quot;&quot;&#10;    def __init__(self, $Arg$):&#10;        $Super$&#10;        self.$Arg$ = $Arg$&#10;    $Code$&#10;$END$" description="" toReformat="true" toShortenFQNames="true">
    <variable name="ClassName" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="Object" expression="" defaultValue="object" alwaysStopAt="true" />
    <variable name="Docstring" expression="" defaultValue="docstring for $ClassName$" alwaysStopAt="true" />
    <variable name="Arg" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="Super" expression="" defaultValue="super($ClassName$, self).__init__()" alwaysStopAt="true" />
    <variable name="Code" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
  <template name="copyright" value="##############################################################################&#10;#&#10;#    $ModuleName$ module for OpenERP, $Description$&#10;#    Copyright (C) $200X$ $Company$ (&lt;http://$Website$&gt;) $Author$&#10;#&#10;#    This file is a part of $ModuleName$&#10;#&#10;#    $ModuleName$ is free software: you can redistribute it and/or modify&#10;#    it under the terms of the GNU General Public License as published by&#10;#    the Free Software Foundation, either version 3 of the License, or&#10;#    (at your option) any later version.&#10;#&#10;#    $1 is distributed in the hope that it will be useful,&#10;#    but WITHOUT ANY WARRANTY; without even the implied warranty of&#10;#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the&#10;#    GNU General Public License for more details.&#10;#&#10;#    You should have received a copy of the GNU General Public License&#10;#    along with this program.  If not, see &lt;http://www.gnu.org/licenses/&gt;.&#10;#&#10;##############################################################################&#10;$END$" description="" toReformat="true" toShortenFQNames="true">
    <variable name="ModuleName" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="Description" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="200X" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="Company" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="Website" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="Author" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
  <template name="oom Wizard TransientModel" value="class $ClassName$(orm.TransientModel):&#10;    _name = '$ObjectName$'&#10;    _description = '$Description$'&#10;&#10;&#10;$END$" description="" toReformat="true" toShortenFQNames="true">
    <variable name="ObjectName" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="ClassName" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="Description" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
  <template name="try Try/Except" value="try:&#10;    $var1$&#10;except $var2$, $var3$:&#10;    $var4$&#10;$END$" description="" toReformat="true" toShortenFQNames="true">
    <variable name="var1" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="var2" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="var3" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="var4" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
  <template name="this (use in wizard)" value="this = self.browse(ids[0])" description="" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
  <template name="import translate" value="from odoo.tools.translate import _" description="" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
  <template name="func search" value="@api.model&#10;def search(self, args, offset=0, limit=None, order=None, count=False):&#10;    &quot;&quot;&quot;&#10;    $var1$&#10;    &quot;&quot;&quot;&#10;&#10;    return supper($var9$, self).read(args, offset, limit, order, count)" description="" toReformat="true" toShortenFQNames="true">
    <variable name="var1" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="var9" expression="pyClassName()" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
  <template name="func read" value="@api.multi&#10;def read(self, fields=None, load='_classic_read'):&#10;    &quot;&quot;&quot;&#10;    $var1$&#10;    &quot;&quot;&quot;&#10;&#10;    return supper($var9$, self).read(fields, load)" description="" toReformat="true" toShortenFQNames="true">
    <variable name="var1" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="var9" expression="pyClassName()" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
  <template name="func create" value="@api.model&#10;def create(self, vals):&#10;    &quot;&quot;&quot;&#10;    $var1$&#10;    &quot;&quot;&quot;&#10;&#10;    return supper($var9$, self).create(vals)" description="" toReformat="true" toShortenFQNames="true">
    <variable name="var1" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="var9" expression="pyClassName()" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
  <template name="func write" value="@api.multi&#10;def write(self):&#10;    &quot;&quot;&quot;&#10;    $var1$&#10;    &quot;&quot;&quot;&#10;&#10;    return supper($var9$, self).write()" description="" toReformat="true" toShortenFQNames="true">
    <variable name="var1" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="var9" expression="pyClassName()" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
  <template name="func unlink" value="@api.multi&#10;def unlink(self):&#10;    &quot;&quot;&quot;&#10;    $var1$&#10;    &quot;&quot;&quot;&#10;&#10;    return supper($var9$, self).unlink()" description="" toReformat="true" toShortenFQNames="true">
    <variable name="var1" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="var9" expression="pyClassName()" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
  <template name="func copy" value="@api.multi&#10;@api.return('self',lambda value:value.id)&#10;def copy(self, default=None):&#10;    &quot;&quot;&quot;&#10;    $var1$&#10;    &quot;&quot;&quot;&#10;&#10;    return supper($var9$, self).copy(default)&#10;$END$" description="" toReformat="true" toShortenFQNames="true">
    <variable name="var1" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="var9" expression="pyClassName()" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
  <template name="func default_get" value="@api.model&#10;def default_get(self, default_fields):&#10;    &quot;&quot;&quot;&#10;    $var1$&#10;    &quot;&quot;&quot;&#10;&#10;    return supper($var9$, self).default_get(default_fields)" description="" toReformat="true" toShortenFQNames="true">
    <variable name="var1" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="var9" expression="pyClassName()" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
  <template name="func fields_get" value="@api.model&#10;def fields_get(self, allfields=None, attributes=None):&#10;    &quot;&quot;&quot;&#10;    $var1$&#10;    &quot;&quot;&quot;&#10;&#10;    return supper($var9$, self).fields_get(allfields, attributes)" description="" toReformat="true" toShortenFQNames="true">
    <variable name="var1" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="var9" expression="pyClassName()" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
  <template name="func init" value="def init(self, cr):&#10;    &quot;&quot;&quot;&#10;    $var1$&#10;    &quot;&quot;&quot;&#10;    cr.execute(&quot;&quot;&quot;CREATE OR REPLACE VIEW $var2$ AS (&#10;            $var3$)&#10;    &quot;&quot;&quot;)&#10;$END$" description="" toReformat="true" toShortenFQNames="true">
    <variable name="var1" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="var2" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="var3" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
  <template name="call read" value="self.read($var1$, ['$var2$'])$var3$&#10;$END$" description="" toReformat="true" toShortenFQNames="true">
    <variable name="var1" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="var2" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="var3" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
  <template name="call browse" value="self.browse($var1$)$END$" description="" toReformat="true" toShortenFQNames="true">
    <variable name="var1" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
  <template name="call search" value="self.search([('$var1$', '$var2$', '$var3$')])$var4$&#10;$END$" description="" toReformat="true" toShortenFQNames="true">
    <variable name="var1" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="var2" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="var3" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="var4" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
  <template name="call create" value="id = self.create($var1$)$var2$&#10;$END$" description="" toReformat="true" toShortenFQNames="true">
    <variable name="var1" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="var2" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
  <template name="call write" value="record.write($var2$)$END$" description="" toReformat="true" toShortenFQNames="true">
    <variable name="var2" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
  <template name="call unlink" value="record.unlink()$END$" description="" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
  <template name="call copy" value="self.copy($var1$, $var2$)$END$" description="" toReformat="true" toShortenFQNames="true">
    <variable name="var1" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="var2" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
  <template name="logger" value="import netsvc&#10;logger = netsvc.Logger()&#10;" description="" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
  <template name="logging" value="import logging&#10;logger = logging.getLogger($var1$)&#10;$END$" description="" toReformat="true" toShortenFQNames="true">
    <variable name="var1" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
  <template name="ctx" value="ctx = context.copy()" description="" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
  <template name="try Try/Except/Else" value="try:&#10;    $var1$&#10;except $var2$, $var3$:&#10;    $var4$&#10;else:&#10;    $var5$&#10;$END$" description="" toReformat="true" toShortenFQNames="true">
    <variable name="var1" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="var2" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="var3" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="var4" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="var5" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
  <template name="try Try/Except/Finally" value="try:&#10;    $var1$&#10;except $var2$, $var3$:&#10;    $var4$&#10;finally:&#10;    $var5$&#10;$END$" description="" toReformat="true" toShortenFQNames="true">
    <variable name="var1" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="var2" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="var3" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="var4" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="var5" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
  <template name="try Try/Except/Else/Finally" value="try:&#10;    $var1$&#10;except $var2$, $var3$:&#10;    $var4$&#10;finally:&#10;    $var5$&#10;finally:&#10;    $var6$&#10;$END$" description="" toReformat="true" toShortenFQNames="true">
    <variable name="var1" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="var2" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="var3" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="var4" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="var5" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="var6" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
  <template name="ifcontext" value="if context is None:&#10;    context = {}&#10;$END$" description="" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
  <template name="pdb" value="import pdb&#10;pdb.set_trace()" description="" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
  <template name="super" value="super($class$, self).$method$($END$)" description="Generates a 'super' call" toReformat="true" toShortenFQNames="true">
    <variable name="class" expression="pyClassName()" defaultValue="" alwaysStopAt="false" />
    <variable name="method" expression="pyFunctionName()" defaultValue="" alwaysStopAt="false" />
  </template>
  <template name="docstring" value="&quot;&quot;&quot;&#10;    :param id: id&#10;    :param ids: list of ids&#10;    :rtype: dictionary with a&#10;    &#10;    This function is used for&#10;&quot;&quot;&quot;" description="docstring" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
  <template name="coding_utf8" value="#-*- coding: utf-8 -*-" description="" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
  <template name="encoding_utf8" value="# -*- encoding: utf-8 -*-" description="" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
  <template name="ifhasattrids" value="if not hasattr(ids, '__iter__'):&#10;    ids = [ids]&#10;$END$" description="" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
  <template name="env get" value="self.env.get('$var1$')&#10;$END$" description="" toReformat="true" toShortenFQNames="true">
    <variable name="var1" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
  <template name="licence header" value="# Odoo Module&#10;# Copyright (C) 2019 $company$ $author$ &lt;$email$&gt;&#10;# The licence is in the file __manifest__.py&#10;$END$" description="licence header" toReformat="true" toShortenFQNames="true">
    <variable name="company" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="author" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="email" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
  <template name="ifhasattr" value="if not hasattr($var1$, '__iter__'):&#10;    $var2$&#10;$END$" description="" toReformat="true" toShortenFQNames="true">
    <variable name="var1" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="var2" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
  <template name="fields.binary" value="$var1$ = fields.Binary(string='$var2$')$END$" description="" toReformat="true" toShortenFQNames="true">
    <variable name="var1" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="var2" expression="capitalize(underscoresToSpaces(var1))" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
  <template name="fields.boolean" value="$var1$ = fields.Boolean(string='$var2$')$END$" description="" toReformat="true" toShortenFQNames="true">
    <variable name="var1" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="var2" expression="capitalize(underscoresToSpaces(var1))" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
  <template name="fields.char" value="$var1$ = fields.Char(string='$var2$')$END$" description="" toReformat="true" toShortenFQNames="true">
    <variable name="var1" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="var2" expression="capitalize(underscoresToSpaces(var1))" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
  <template name="fields.date" value="$var1$ = fields.Date(string='$var2$')$END$&#10;" description="" toReformat="true" toShortenFQNames="true">
    <variable name="var1" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="var2" expression="capitalize(underscoresToSpaces(var1))" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
  <template name="fields.datetime" value="$var1$ = fields.Datetime(string='$var2$')$END$" description="" toReformat="true" toShortenFQNames="true">
    <variable name="var1" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="var2" expression="capitalize(underscoresToSpaces(var1))" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
  <template name="fields.float" value="$var1$ = fields.Float(string='$var2$')$END$" description="" toReformat="true" toShortenFQNames="true">
    <variable name="var1" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="var2" expression="capitalize(underscoresToSpaces(var1))" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
  <template name="fields.integer" value="$var1$ = fields.Integer(string='$var2$')$END$" description="" toReformat="true" toShortenFQNames="true">
    <variable name="var1" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="var2" expression="capitalize(underscoresToSpaces(var1))" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
  <template name="fields.many2many" value="$var1$_ids = fields.Many2many(string='$var6$',comodel_name='$var2$',&#10;                           relation='$var3$',&#10;                           column1='$var4$',&#10;                           column2='$var5$')$END$" description="" toReformat="true" toShortenFQNames="true">
    <variable name="var1" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="var6" expression="capitalize(underscoresToSpaces(var1))" defaultValue="" alwaysStopAt="true" />
    <variable name="var5" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="var2" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="var3" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="var4" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
  <template name="fields.many2one" value="$var1$_id = fields.Many2one(string='$var6$',comodel_name='$var2$')$END$" description="" toReformat="true" toShortenFQNames="true">
    <variable name="var1" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="var6" expression="capitalize(underscoresToSpaces(var1))" defaultValue="" alwaysStopAt="true" />
    <variable name="var2" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
  <template name="fields.one2many" value="$var1$_ids = fields.One2many(string='$var6$', comodel_name='$var2$', inverse_name='$var4$')$END$" description="" toReformat="true" toShortenFQNames="true">
    <variable name="var1" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="var6" expression="capitalize(underscoresToSpaces(var1))" defaultValue="" alwaysStopAt="true" />
    <variable name="var2" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="var4" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
  <template name="fields.reference" value="$var1$ = fields.Reference(string='$var6$',[('$var2$', '$var3$')])$END$" description="" toReformat="true" toShortenFQNames="true">
    <variable name="var1" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="var6" expression="capitalize(underscoresToSpaces(var1))" defaultValue="" alwaysStopAt="true" />
    <variable name="var2" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="var3" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
  <template name="fields.related stored" value="$var1$ = fields.$var2$(string='$var3$', store=True, related='$var4$')$END$" description="" toReformat="true" toShortenFQNames="true">
    <variable name="var1" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="var2" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="var3" expression="capitalize(underscoresToSpaces(var1))" defaultValue="" alwaysStopAt="true" />
    <variable name="var4" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
  <template name="fields.selection" value="$var1$ = fields.Selection(string='$var6$',[('$var2$', '$var3$')$var4$])$END$" description="" toReformat="true" toShortenFQNames="true">
    <variable name="var1" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="var6" expression="capitalize(underscoresToSpaces(var1))" defaultValue="" alwaysStopAt="true" />
    <variable name="var2" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="var3" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="var4" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
  <template name="fields.text" value="$var1$ = fields.Text(string='$var2$')$END$" description="" toReformat="false" toShortenFQNames="true">
    <variable name="var1" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="var2" expression="capitalize(underscoresToSpaces(var1))" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
  <template name="fields.related" value="$var1$ = fields.$var2$(string='$var3$', related='$var4$')$END$" description="" toReformat="true" toShortenFQNames="true">
    <variable name="var1" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="var2" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="var3" expression="capitalize(underscoresToSpaces(var1))" defaultValue="" alwaysStopAt="true" />
    <variable name="var4" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
  <template name="oo OpenObject Class &gt;= 8.0" value="class $ClassName$(models.Model):&#10;    _name = '$ObjectName$'&#10;    _description = '$Description$'&#10;&#10;    $Fields$&#10;$END$" description="" toReformat="false" toShortenFQNames="true">
    <variable name="ClassName" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="ObjectName" expression="lowercaseAndDash(ClassName)" defaultValue="" alwaysStopAt="true" />
    <variable name="Description" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="Fields" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
  <template name="ooi OpenObject Class Inherit &gt;= 8.0" value="class $ClassName$(models.Model):&#10;    _inherit = '$ObjectName$'&#10;&#10;    $Fields$&#10;$END$" description="" toReformat="true" toShortenFQNames="true">
    <variable name="ClassName" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="ObjectName" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="Fields" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
  <template name="models fields api" value="from odoo import models, fields, api, _&#10;from odoo.exceptions import UserError, ValidationError&#10;import odoo.addons.decimal_precision as dp&#10;$var1$&#10;$END$" description="" toReformat="true" toShortenFQNames="true">
    <variable name="var1" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
  <template name="oimport -- odoo" value="from odoo import models, fields&#10;" description="odoo import" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
  <template name="func on_change" value="@api.onchange('$var1$')&#10;def onchange_$var1$(self):&#10;    &quot;&quot;&quot;&#10;    $var2$&#10;    &quot;&quot;&quot;&#10;    self.$var3$ = $var4$&#10;$END$" description="" toReformat="true" toShortenFQNames="true">
    <variable name="var1" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="var2" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="var3" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="var4" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
  <template name="func on_change warning" value="@api.onchange('$var1$')&#10;def onchange_$var1$(self):&#10;    &quot;&quot;&quot;&#10;    $var2$&#10;    &quot;&quot;&quot;&#10;    return {&#10;                    'title': _('Warning!'),&#10;                    'message': _('$var9$.'),&#10;                }&#10;$END$" description="" toReformat="true" toShortenFQNames="true">
    <variable name="var1" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="var2" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="var9" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
  <template name="func on_change domain" value="@api.onchange('$var1$')&#10;def onchange_$var1$(self):&#10;    &quot;&quot;&quot;&#10;    $var2$&#10;    &quot;&quot;&quot;&#10;    &#10;    domain['$field$'] = [('$child_field$', '$op$', $val$)] &#10;    return {'domain': domain}&#10;$END$" description="" toReformat="true" toShortenFQNames="true">
    <variable name="var1" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="var2" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="field" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="child_field" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="op" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="val" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
</templateSet>